// scheme-model

const db = require('../data/db-config');



const find = () => {
  return db('schemes')
}

const findById = (id) => {
  return db('schemes').where({ id })
}

const add = (schemeRow) => {
  return db('schemes').insert(schemeRow)
}

const update = (changes, id) => {
  return db('schemes').where({ id }).update( { ...changes } );
}

const remove = (id) => {
  return db('schemes').where({ id }).del();
}

const findSteps = (schemeId) => {
  return db('schemes as sc')
    .where({ 'sc.id': schemeId })
    .join('steps as s', 's.scheme_id', 'sc.id')
    .select('sc.scheme_name', 's.step_number', 's.instructions')
    .orderBy('s.step_number', 'asc');

    // review later with scheme alias?
  // SELECT scheme.scheme_name, s.step_number, s.instructions 
  // FROM scheme
  // JOIN Steps as s ON scheme.id = s.scheme_id
  // WHERE scheme.id = schemeId
  // ORDER BY s.step_number asc;

}

module.exports = {
  find,
  findById,
  add,
  update,
  remove,
  findSteps
}

// Write helpers methods in `./schemes/scheme-model.js` that match the following specifications:

// - Resolves to an array of all correctly ordered step for the given scheme:

  // `[ { id: 17, scheme_name: 'Find the Holy Grail', step_number: 1, instructions: 'quest'}, 
  // { id: 18, scheme_name: 'Find the Holy Grail', step_number: 2, instructions: '...and quest'}, etc. ]`.

// - This array should include the `scheme_name` _not_ the `scheme_id`.

// #### Schemes Schema

// | field       | data type        | metadata                                            |
// | :---------- | :--------------- | :-------------------------------------------------- |
// | id          | unsigned integer | primary key, auto-increments, generated by database |
// | scheme_name | string           | required, unique                                    |

// #### Steps Schema

// | field        | data type        | metadata                                            |
// | :----------- | :--------------- | :-------------------------------------------------- |
// | id           | unsigned integer | primary key, auto-increments, generated by database |
// | scheme_id    | unsigned integer | foreign key referencing scheme.id, required         |
// | step_number  | unsigned integer | required                                            |
// | instructions | string           | required                                            |